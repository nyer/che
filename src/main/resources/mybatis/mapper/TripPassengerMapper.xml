<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TripPassengerMapper" >
  <resultMap id="BaseResultMap" type="com.che.model.TripPassenger" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="trip_id" property="tripId" jdbcType="BIGINT" />
    <result column="passenger_count" property="passengerCount" jdbcType="INTEGER" />
    <result column="money_amount" property="moneyAmount" jdbcType="DECIMAL" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, trip_id, passenger_count, money_amount, phone, create_time, update_time
  </sql>
  <select id="selectByCond" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from tb_trip_passenger
    <where>
      <if test="tripId != null">
        and trip_id = #{tripId, jdbcType=BIGINT}
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_trip_passenger
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.che.model.TripPassenger" >
    insert into tb_trip_passenger (trip_id, passenger_count,
      money_amount, phone, create_time, 
      update_time)
    values (#{tripId,jdbcType=BIGINT}, #{passengerCount,jdbcType=INTEGER},
      #{moneyAmount,jdbcType=DECIMAL}, #{phone,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.che.model.TripPassenger" >
    insert into tb_trip_passenger
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tripId != null" >
        trip_id,
      </if>
      <if test="passengerCount != null" >
        passenger_count,
      </if>
      <if test="moneyAmount != null" >
        money_amount,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tripId != null" >
        #{tripId,jdbcType=BIGINT},
      </if>
      <if test="passengerCount != null" >
        #{passengerCount,jdbcType=INTEGER},
      </if>
      <if test="moneyAmount != null" >
        #{moneyAmount,jdbcType=DECIMAL},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.che.model.TripPassenger" >
    update tb_trip_passenger
    <set >
      <if test="tripId != null" >
        trip_id = #{tripId,jdbcType=BIGINT},
      </if>
      <if test="passengerCount != null" >
        passenger_count = #{passengerCount,jdbcType=INTEGER},
      </if>
      <if test="moneyAmount != null" >
        money_amount = #{moneyAmount,jdbcType=DECIMAL},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.che.model.TripPassenger" >
    update tb_trip_passenger
    set trip_id = #{tripId,jdbcType=BIGINT},
      passenger_count = #{passengerCount,jdbcType=INTEGER},
      money_amount = #{moneyAmount,jdbcType=DECIMAL},
      phone = #{phone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>